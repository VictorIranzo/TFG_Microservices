Incidences: 8080
Security: 8085
Orders: 8090
Reports: 8095
Notifications: 9000

$ docker-compose up
$ docker-compose stop
$ docker-compose down
$ docker build -t nombre_imagen .
$ docker run -d -p 8080:80 --name nombre_contenedor nombre_imagen
$ docker logs nombre_contenedor
$ docker exec -it nombre_contenedor bash
$ docker ps -a 
$ docker stop nombre_contenedor
$ docker rm nombre_contenedor
$ docker rm $(docker ps -a -f status=exited -q)
$ docker images -a
$ docker rmi nombre_imagen
$ docker rmi $(docker images -a -q)

az login
az resource list --resource-group MicroservicesBackend
az acr login --name MicroservicesContainterRegistry

docker tag shopmicroservicessecurity microservicescontainterregistry.azurecr.io/shopmicroservicessecurity

docker push microservicescontainterregistry.azurecr.io/shopmicroservicessecurity

Entidad de servicio de Azure Active directory:
{
  "appId": "c328cbc4-36f8-4082-8d8a-8eded646f4fd",
  "displayName": "azure-cli-2018-08-07-17-22-55",
  "name": "http://azure-cli-2018-08-07-17-22-55",
  "password": "0f7a0b65-5dbe-434b-9a26-f12e7d34a8f2",
  "tenant": "be4655df-ac73-401f-a7ae-198c3b72d0c6"
}

az vm list-ip-addresses --resource-group MicroservicesBackend -o table

journalctl -u kubelet -o cat

kubectl get service shop-microservices-security --watch

kubectl apply -f kubernetes.yaml

kubectl run -it --rm aks-ssh --image=debian

kubectl cp ~/.ssh/id_rsa aks-ssh-7b5b5856cd-k74hd:/id_rsa

kubectl replace --force -f kubernetes.yaml

az acr login --name BackendMicroservicesContainterRegistry

az login

az acr list --resource-group myResourceGroup --query "[].{acrLoginServer:loginServer}" --output table

az acr repository list --name MicroservicesContainterRegistry --output table

az aks create --name KubernetesCluster2 --resource-group MicroservicesBackend --node-count 1 --generate-ssh-keys --service-principal c328cbc4-36f8-4082-8d8a-8eded646f4fd --client-secret 0f7a0b65-5dbe-434b-9a26-f12e7d34a8f2

az aks get-credentials --name myAKSCluster --resource-group myResourceGroup


vicirji@Azure:~$ az aks create --resource-group MicroservicesBackend  --name MicroservicesCluster --node-count 1 --service-principal a46204e4-66d6-4aa8-bbae-b3186b64854e --client-secret 714ac430-6226-4397-a81c-5f31bd70a30 --generate-ssh-keys
{
  "aadProfile": null,
  "addonProfiles": null,
  "agentPoolProfiles": [
    {
      "count": 1,
      "maxPods": 110,
      "name": "nodepool1",
      "osDiskSizeGb": null,
      "osType": "Linux",
      "storageProfile": "ManagedDisks",
      "vmSize": "Standard_DS1_v2",
      "vnetSubnetId": null
    }
  ],
  "dnsPrefix": "Microservi-MicroservicesBac-ca3627",
  "enableRbac": true,
  "fqdn": "microservi-microservicesbac-ca3627-8885d6c9.hcp.westeurope.azmk8s.io",
  "id": "/subscriptions/ca362761-30ba-43d8-89db-430f3c95640f/resourcegroups/MicroservicesBackend/providers/Microsoft.ContainerService/managedClusters/MicroservicesCluster",
  "kubernetesVersion": "1.9.9",
  "linuxProfile": {
    "adminUsername": "azureuser",
    "ssh": {
      "publicKeys": [
        {
          "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDIeLtOGVdPVHrkJLl4z7M005JTvzUdkcz4QTaVqii/Mdllmk6RZFZdj6yWP7ZykR4qogNI7xfUAUUFXkjHe1yGbooddOLlXkcA5oSOSHB8hAEcOuAxFa0hliVyxzEXstDBGIt12eIm0IuFAf63EMXBcg0mBJmcaoLhk2N/hk2A30EfOBuWd1qti4sl2tUqTUjK8Vb9YWqoT054UTdTwIbRZNHonilIo4x8c3P68gnrEksIThTdUdSWsf+bf6NJqzUnP3tzUf063BHghtLXg/vVdrvgT/c06NxmmTJY59ADe6/Gv79N9OOVhUuU68IQjP0LOhmJUqER9JjYFjv6QVM5"
        }
      ]
    }
  },
  "location": "westeurope",
  "name": "MicroservicesCluster",
  "networkProfile": {
    "dnsServiceIp": "10.0.0.10",
    "dockerBridgeCidr": "172.17.0.1/16",
    "networkPlugin": "kubenet",
    "networkPolicy": null,
    "podCidr": "10.244.0.0/16",
    "serviceCidr": "10.0.0.0/16"
  },
  "nodeResourceGroup": "MC_MicroservicesBackend_MicroservicesCluster_westeurope",
  "provisioningState": "Succeeded",
  "resourceGroup": "MicroservicesBackend",
  "servicePrincipalProfile": {
    "clientId": "a46204e4-66d6-4aa8-bbae-b3186b64854e",
    "secret": null
  },
  "tags": null,
  "type": "Microsoft.ContainerService/ManagedClusters"
}

az role assignment create --assignee "805b9bb0-885d-4a67-9b6a-cc4933d819fd" --scope /subscriptions/ca362761-30ba-43d8-89db-430f3c95640f/resourceGroups/MicroservicesBackend/providers/Microsoft.ContainerRegistry/registries/BackendMicroservicesContainerRegistry --role Reader

az aks create --resource-group MicroservicesBackend --name MicroservicesCluster2 --node-count 1 --service-principal "805b9bb0-885d-4a67-9b6a-cc4933d819fd" --client-secret "70824326-2674-4285-b0e0-99e6ed0dba5e" --generate-ssh-keys
